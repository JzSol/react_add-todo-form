{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","id","completed","title","cn","TodoList","todos","map","username","findUserById","userId","usersFromServer","find","allTodosWithUser","App","useState","setTitle","currUser","selectUser","setTodos","hasTitleError","sethasTitleError","hasUserError","sethasUserError","getMaxId","Math","max","onSubmit","event","preventDefault","htmlFor","type","value","placeholder","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2df214c9.chunk.js","sourcesContent":["import { User } from '../../Types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo:React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import cn from 'classnames';\nimport { Todo } from '../../Types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    user,\n    completed,\n    title,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={cn(\n        'TodoInfo',\n        { 'TodoInfo--completed': completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import { Todo } from '../../Types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList:React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo\n        key={todo.id}\n        todo={todo}\n      />\n    ))}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './Types/Todo';\nimport { User } from './Types/User';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nconst findUserById = (userId: number) => usersFromServer.find(\n  (user) => user.id === userId,\n) as User;\n\nconst allTodosWithUser: Todo[] = todosFromServer.map((todo) => ({\n  ...todo,\n  user: findUserById(todo.userId),\n}));\n\nexport const App: React.FC<{}> = () => {\n  const [title, setTitle] = useState('');\n  const [currUser, selectUser] = useState('');\n  const [todos, setTodos] = useState(allTodosWithUser);\n  const [hasTitleError, sethasTitleError] = useState(false);\n  const [hasUserError, sethasUserError] = useState(false);\n\n  const getMaxId = Math.max(...todos.map((todo) => todo.id)) + 1;\n\n  const addUser = () => {\n    sethasTitleError(!title);\n    sethasUserError(!currUser);\n\n    if (title && currUser) {\n      setTodos([\n        ...todos,\n        {\n          id: getMaxId,\n          title,\n          completed: false,\n          userId: +currUser,\n          user: findUserById(+currUser),\n        },\n      ]);\n\n      selectUser('');\n      setTitle('');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        onSubmit={(event) => {\n          event.preventDefault();\n          addUser();\n        }}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"titleInput\">Title: </label>\n\n          <input\n            id=\"titleInput\"\n            type=\"text\"\n            value={title}\n            data-cy=\"titleInput\"\n            placeholder=\"ex: clean badroom\"\n            onChange={(event) => {\n              setTitle(event.target.value);\n              sethasTitleError(false);\n            }}\n          />\n\n          {hasTitleError && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"selectInput\">User: </label>\n          <select\n            id=\"selectInput\"\n            data-cy=\"userSelect\"\n            value={currUser}\n            onChange={(event) => {\n              selectUser(event.target.value);\n              sethasUserError(false);\n            }}\n          >\n            <option value=\"\" disabled>\n              Choose a user\n            </option>\n\n            {usersFromServer.map((user) => (\n              <option value={user.id} key={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {hasUserError && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}